[{"C:\\Users\\Vanshika\\Desktop\\unsplash\\src\\index.js":"1","C:\\Users\\Vanshika\\Desktop\\unsplash\\src\\Table.js":"2"},{"size":179,"mtime":1610440930511,"results":"3","hashOfConfig":"4"},{"size":4360,"mtime":1610457007717,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"itp4g0",{"filePath":"9","messages":"10","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Vanshika\\Desktop\\unsplash\\src\\index.js",[],["12","13"],"C:\\Users\\Vanshika\\Desktop\\unsplash\\src\\Table.js",["14","15","16"],"import React, { Component } from 'react'\r\nimport './style.css'\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\r\n        this.state = { //state is by default an object\r\n            students: [\r\n                { id: <h1>Features</h1>,\r\n                  sec: <div><h4>Starter</h4>\r\n                       <div id=\"mydiv\">$<a>0</a></div>\r\n                       <p>Per user,per month</p>\r\n                       <button className={\"but\"}>Go Starter</button></div>,\r\n                  third: <div><h4>Professional</h4>\r\n                       <div id=\"mydiv\">$<a>25</a></div>\r\n                       <p>Per user,per month</p>\r\n                       <button className={\"but\"}>Go Professional</button></div>,\r\n                four: <div><h4>Oraganization</h4>\r\n                       <div id=\"mydiv\">$<a>50</a></div>\r\n                       <p>Per user,per month</p>\r\n                       <button className={\"but\"}>Go Oraganization</button></div>\r\n        },\r\n                { id: 'Centralized teams',\r\n                    sec: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    third: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    four: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>},\r\n                { id: 'Version history',\r\n                    sec: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    third: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    four: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/> },\r\n                { id: 'Plugin administration',\r\n                    sec: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    third: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    four: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/> },\r\n                { id: 'Facebook & Instagram Ads',\r\n                    sec: <input type=\"checkbox\" name=\"switch\" className=\"check\"/>,\r\n                    third: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>,\r\n                    four: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>},\r\n                { id: 'Design System Analysis',\r\n                    sec: <input type=\"checkbox\" name=\"switch\" className=\"check\"/>,\r\n                    third: <input type=\"checkbox\" name=\"switch\" className=\"check\"/>,\r\n                    four: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>},\r\n                { id: 'Unlimited cloud storage',\r\n                    sec: <input type=\"checkbox\" name=\"switch\" className=\"check\"/>,\r\n                    third: <input type=\"checkbox\" name=\"switch\" className=\"check\"/>,\r\n                    four: <input type=\"checkbox\" name=\"switch\" className=\"check\" checked/>}\r\n\r\n            ]\r\n        }\r\n    }\r\n    renderTableData() {\r\n        return this.state.students.map((student, index) => {\r\n            const { id, sec, third, four } = student //destructuring\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{sec}</td>\r\n                    <td>{third}</td>\r\n                    <td>{four\r\n                    }</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    renderTableHeader() {\r\n        let header = Object.keys(this.state.students[0])\r\n        return header.map((key, index) => {\r\n            return <th key={index}>\r\n                {   key.toUpperCase()\r\n                    //I have not use the header as i have displayed it none in css hence this function is useless\r\n            }</th>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table id='students'>\r\n                    <tbody>\r\n                    <tr>{this.renderTableHeader()}</tr>\r\n                    {this.renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n                <br />\r\n                <p>I have preselected the checkbox as shown in the given task and the remaining can be selected when needed.</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n export default Table",{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","severity":1,"message":"22","line":11,"column":41,"nodeType":"23","endLine":11,"endColumn":44},{"ruleId":"21","severity":1,"message":"22","line":15,"column":41,"nodeType":"23","endLine":15,"endColumn":44},{"ruleId":"21","severity":1,"message":"22","line":19,"column":41,"nodeType":"23","endLine":19,"endColumn":44},"no-native-reassign",["24"],"no-negated-in-lhs",["25"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]